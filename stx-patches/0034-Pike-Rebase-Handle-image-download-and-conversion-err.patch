From bf0a0afb331c910d409ad82d8b26ea280ecbb78c Mon Sep 17 00:00:00 2001
From: Daniel Badea <daniel.badea@windriver.com>
Date: Fri, 8 Dec 2017 23:06:14 +0000
Subject: [PATCH 34/53] Pike Rebase: Handle image download and conversion
 errors - Unit Test

---
 cinder/tests/unit/test_image_utils.py              | 31 ++++++++++++++
 .../unit/volume/flows/test_create_volume_flow.py   | 50 ++++++++++++++++++++++
 2 files changed, 81 insertions(+)

diff --git a/cinder/tests/unit/test_image_utils.py b/cinder/tests/unit/test_image_utils.py
index 752f01f..5f9f1b4 100644
--- a/cinder/tests/unit/test_image_utils.py
+++ b/cinder/tests/unit/test_image_utils.py
@@ -256,6 +256,37 @@ class TestConvertImage(test.TestCase):
                 '-t', 'none', '-W', '-O', out_format,
                 source, dest, run_as_root=True)
 
+    @mock.patch('cinder.image.image_utils.CONF')
+    @mock.patch('cinder.volume.utils.check_for_odirect_support',
+                return_value=True)
+    @mock.patch('cinder.image.image_utils.qemu_img_info')
+    @mock.patch('cinder.utils.execute')
+    @mock.patch('cinder.utils.is_blk_device', return_value=False)
+    @mock.patch('os.path.exists', return_value=True)
+    @mock.patch('os.path.ismount', return_value=True)
+    @mock.patch('cinder.image.image_utils.utils.tempdir')
+    def test_not_enough_conversion_space(self,
+                                         mock_tempdir,
+                                         mock_ismount,
+                                         mock_exists,
+                                         mock_isblk,
+                                         mock_exec,
+                                         mock_info,
+                                         mock_odirect,
+                                         mock_conf):
+        source = mock.sentinel.source
+        conv_dir = image_utils.temporary_dir()
+        mock_conf.image_conversion_dir = conv_dir
+        dest = [mock_conf.image_conversion_dir]
+        out_format = mock.sentinel.out_format
+        mock_info.side_effect = ValueError
+        mock_exec.side_effect = processutils.ProcessExecutionError(
+            stderr='No space left on device')
+
+        self.assertRaises(exception.InsufficientConversionSpace,
+                          image_utils.convert_image,
+                          source, dest, out_format)
+
 
 class TestResizeImage(test.TestCase):
     @mock.patch('cinder.utils.execute')
diff --git a/cinder/tests/unit/volume/flows/test_create_volume_flow.py b/cinder/tests/unit/volume/flows/test_create_volume_flow.py
index 80fb2f5..097209a 100644
--- a/cinder/tests/unit/volume/flows/test_create_volume_flow.py
+++ b/cinder/tests/unit/volume/flows/test_create_volume_flow.py
@@ -1803,3 +1803,53 @@ class CreateVolumeFlowManagerImageCacheTestCase(test.TestCase):
         # Make sure we didn't try and create a cache entry
         self.assertFalse(self.mock_cache.ensure_space.called)
         self.assertFalse(self.mock_cache.create_cache_entry.called)
+
+    @mock.patch('cinder.image.image_utils.check_available_space')
+    @mock.patch('cinder.image.image_utils.qemu_img_info')
+    @mock.patch('cinder.message.api.API.create')
+    @mock.patch('cinder.db.volume_fault_update')
+    @mock.patch('os.path.ismount', return_value=True)
+    def test_create_from_image_ioerror(
+            self, mock_ismount, mock_volume_fault_update,
+            mock_message_create, mock_qemu_info, mock_check_space,
+            mock_get_internal_context,
+            mock_create_from_img_dl, mock_create_from_src,
+            mock_handle_bootable, mock_fetch_img):
+        image_info = imageutils.QemuImgInfo()
+        image_info.virtual_size = '2147483648'
+        mock_qemu_info.return_value = image_info
+        self.mock_driver.clone_image.return_value = (None, False)
+        self.mock_cache.get_entry.return_value = None
+
+        volume = fake_volume.fake_volume_obj(self.ctxt, size=2,
+                                             host='foo@bar#pool')
+        image_volume = fake_volume.fake_db_volume(size=2)
+        self.mock_db.volume_create.return_value = image_volume
+
+        image_location = 'someImageLocationStr'
+        image_id = fakes.IMAGE_ID
+        image_meta = mock.MagicMock()
+        mock_create_from_img_dl.side_effect = IOError(
+            "No space left on device")
+
+        manager = create_volume_manager.CreateVolumeFromSpecTask(
+            self.mock_volume_manager,
+            self.mock_db,
+            self.mock_driver,
+            image_volume_cache=self.mock_cache
+        )
+        self.assertRaises(
+            exception.InsufficientConversionSpace,
+            manager._create_from_image_cache_or_download,
+            self.ctxt,
+            volume,
+            image_location,
+            image_id,
+            image_meta,
+            self.mock_image_service
+        )
+
+        mock_volume_fault_update.assert_called_once()
+        args = mock_volume_fault_update.call_args[0]
+        self.assertEqual(args[1], volume.id)
+        self.assertIn('Insufficient free space', args[2].get('message', ''))
-- 
2.7.4

